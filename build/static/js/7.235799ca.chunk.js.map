{"version":3,"sources":["settings/index.js","services/MovieFinder.js","components/helpers/MovieCard.js","components/views/Actor.js"],"names":["movieFinder","this","apiBaseUrl","imageBaseUrl","moviePath","size","process","profilePath","movie","page","Promise","resolve","reject","url","settings","fetch","then","response","json","data","status_code","status_message","results","actorId","urlDetails","movieId","props","btnAction","viewOnly","onClick","addToFavorite","className","onlyDelete","inFav","deleteMovieFromFavorites","navigator","onLine","src","movieImage","seeMovieDetails","id","alt","title","moment","release_date","format","indexedDbSupported","Actor","fetchActor","getActorDetails","actorDetails","setState","catch","error","errorFetch","fetchActorMovies","getActorMovies","actorMovies","cast","length","renderActorDetails","actorImage","getActorProfile","profile_path","actorBirthday","birthday","birthPlace","place_of_birth","actorAge","Date","getFullYear","actorDeathday","deathday","name","role","aria-label","biography","history","push","renderMovie","getImageMovie","poster_path","key","renderActorMovies","sortedActorMovies","sort","prevMovie","nextMovie","vote_average","slice","map","state","db","match","params","console","log","React","Component","withRouter"],"mappings":"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","file":"static/js/7.235799ca.chunk.js","sourcesContent":["export default {\n  apiKey: \"dc090ca63005b139171720979eb0186c\"\n}","import settings from \"../settings\";\nexport default class movieFinder {\n  constructor() {\n    this.apiBaseUrl = \"https://api.themoviedb.org/3\";\n    this.imageBaseUrl = \"https://image.tmdb.org/t/p\"\n  } \n\n  getImageMovie(moviePath, size = 500) {\n    return moviePath ? `${this.imageBaseUrl}/w${size}${moviePath}` : `${process.env.PUBLIC_URL}/placeholder.jpg`;\n  }\n\n  getActorProfile(profilePath, size = 200) {\n    return profilePath ? `${this.imageBaseUrl}/w${size}${profilePath}` : \"https://via.placeholder.com/200x300\";\n  }  \n\n  searchMovie(movie, page) {\n    return new Promise((resolve, reject) => {\n      const url = `${this.apiBaseUrl}/search/movie?api_key=${settings.apiKey}&language=fr-FR&query=${movie}&page=${page}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status_code === 7) {\n            reject(data.status_message);\n          } else {\n            resolve(data.results)\n          }\n        })\n    })\n  }\n\n  getActorDetails(actorId) {\n    return new Promise((resolve, reject) => {\n      const urlDetails = `${this.apiBaseUrl}/person/${actorId}?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(urlDetails)\n      .then(response => response.json())\n      .then(data => {\n        if (!data) {\n          return reject()\n        }\n\n        return resolve(data);\n      })\n    })\n  }\n\n  getActorMovies(actorId) {\n    return new Promise((resolve, reject) => {\n      const urlDetails = `${this.apiBaseUrl}/person/${actorId}/movie_credits?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(urlDetails)\n      .then(response => response.json())\n      .then(data => {\n        if (!data) {\n          return reject()\n        }\n\n        return resolve(data);\n      })\n    })\n  }\n\n  \n\n  getMovieDetail(movieId) {\n    return new Promise((resolve, reject) => {\n      const url = `${this.apiBaseUrl}/movie/${movieId}?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status_code === 7) {\n            reject(data.status_message);\n          } else {\n            resolve(data)\n          }\n        })\n    })\n  }\n\n  getMovieCredits(movieId) {\n    return new Promise((resolve, reject) => {\n      const url = `${this.apiBaseUrl}/movie/${movieId}/credits?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status_code === 7) {\n          reject(data.status_message);\n        } else {\n          resolve(data)\n        }\n      })\n    })\n  }\n}","import React from \"react\";\nimport moment from \"moment\";\n\nexport default (props) => {\n  let btnAction = null;\n  \n  if (!props.viewOnly) {\n    btnAction = <button onClick={() => props.addToFavorite(props.movie)} className=\"btn-action add-to-favorites\">Ajouter</button>;\n  \n    if (props.onlyDelete || props.movie.inFav) {\n      btnAction = <button onClick={() => props.deleteMovieFromFavorites(props.movie)} className=\"btn-action remove-from-favorites\">Supprimer</button>\n    }\n  }\n  \n  return (\n    <li className=\"movie-card\">\n      {navigator.onLine && <img src={props.movieImage} onClick={() => props.seeMovieDetails(props.movie.id)} alt={`Affiche de ${props.movie.title}`} className=\"movie-card__img cursorPointer\" />}\n      <p className=\"movie-card__title\">{props.movie.title}</p>\n      <p className=\"movie-card__release\">{moment(props.movie.release_date).format(\"DD/MM/YYYY\")}</p>\n      <div className=\"movie-card__action\">\n        {props.indexedDbSupported && btnAction }\n        {navigator.onLine && <button onClick={() => props.seeMovieDetails(props.movie.id)} className=\"btn-action movie-details\">Détails</button> }\n      </div>\n    </li>\n  )\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport movieFinder from \"../../services/MovieFinder\";\n\nimport MovieCard from \"../helpers/MovieCard\";\nclass Actor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actorDetails: null,\n      actorMovies: null,\n      errorFetch: null,\n      db: null\n    }\n    this.movieFinder = new movieFinder();\n  }\n\n  componentDidMount() {\n    if (this.props.match.params && this.props.match.params.id) {\n      this.fetchActor(this.props.match.params.id);\n      this.fetchActorMovies(this.props.match.params.id);\n    } else {\n      console.log(\"Impossible de récupérer le détail de l'acteur\")\n    }\n  }\n\n  fetchActor = id => {\n    this.movieFinder.getActorDetails(id)\n      .then(actorDetails => {\n        this.setState({\n          actorDetails\n        })\n      })\n      .catch(error => {\n        this.setState({\n          errorFetch: true\n        })\n      })\n  }\n\n  fetchActorMovies = id => {\n    this.movieFinder.getActorMovies(id)\n    .then(actorMovies => {\n      if (!actorMovies.cast || !actorMovies.cast.length) {\n        return null;\n      }\n\n      return this.setState({\n        actorMovies\n      })\n    })\n    .catch(error => {\n      this.setState({\n        errorFetch: true\n      })\n    })\n  }\n\n  renderActorDetails = actorDetails => {\n    const actorImage = this.movieFinder.getActorProfile(actorDetails.profile_path, 500);\n    const actorBirthday = actorDetails.birthday ? moment(actorDetails.birthday).format(\"DD/MM/YYYY\") : null;\n    const birthPlace = actorDetails.place_of_birth || null;\n    const actorAge = actorBirthday ? `${ new Date().getFullYear() - new Date(actorBirthday).getFullYear()} yo` : null;\n    const actorDeathday = actorDetails.deathday || null;\n\n    return (\n      <div className=\"layout-single__primary\">\n        <div className=\"layout-single__primary__cover\">\n          <img src={actorImage} alt={`Affiche de ${actorDetails.name}`} />\n        </div>\n        <div className=\"layout-single__primary__infos\">\n          <h1>{actorDetails.name}</h1>\n          { actorAge && <span className=\"actor-details__age\">{actorAge}</span>}\n          <div className=\"layout-single__left-main\">\n            { actorBirthday && birthPlace && <p><span role=\"img\" aria-label=\"emoji poussin\">🐣</span> {actorBirthday} - {birthPlace}</p>}\n            { actorDetails.deathday && <p><span role=\"img\" aria-label=\"emoji cerceuil\">⚰️</span> {actorDeathday}</p>}\n            { actorDetails.biography && <p className=\"textAlignLeft longText\"><span role=\"img\" aria-label=\"emoji style plume\">🖋</span> {actorDetails.biography}</p>}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  seeMovieDetails = id => this.props.history.push(`/movie/${id}`);\n\n  renderMovie = movie => (\n    <MovieCard \n      movieImage={this.movieFinder.getImageMovie(movie.poster_path, 200)} \n      movie={movie}\n      key={`${movie.id}-${movie.release_date}`}\n      seeMovieDetails={() => this.seeMovieDetails(movie.id)}\n    />\n  )\n  \n\n  renderActorMovies = actorMovies => {\n    const sortedActorMovies = actorMovies.cast.sort((prevMovie, nextMovie) => prevMovie.vote_average > nextMovie.vote_average ? -1 : 1).slice(0,12)\n    return (\n      <div className=\"layout-single__right movies-section actor-movies\">\n        <h2>Films</h2>\n        <ul className=\"layout-list movies-list\">{ sortedActorMovies.map(movie => this.renderMovie(movie))}</ul>\n      </div>\n    )\n  }\n \n  render() {\n    return (\n      <section className=\"single-layout actor-details\">\n      { this.state.actorDetails && this.renderActorDetails(this.state.actorDetails) }\n      { this.state.actorMovies && this.renderActorMovies(this.state.actorMovies) }\n      </section>\n    )\n  }\n}\n\nexport default withRouter(Actor);"],"sourceRoot":""}