{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/idb/build/esm/wrap-idb-value.js","../node_modules/idb/build/esm/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","i","length","source","forEach","getOwnPropertyDescriptors","defineProperties","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","set","has","wrapFunction","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","unwrap","storeNames","tx","call","sort","transformCachableValue","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","some","c","Proxy","IDBRequest","request","promise","success","result","catch","promisifyRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","storeName","a","store","index","shift","returnVal","oldTraps","callback","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/1.209a66d4.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then(value => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', event => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    if (terminated)\n        request.addEventListener('close', () => terminated());\n    if (blocking) {\n        openPromise\n            .then(db => db.addEventListener('versionchange', blocking))\n            .catch(() => { });\n    }\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        const returnVal = target[targetFuncName](...args);\n        if (isWrite)\n            await tx.done;\n        return returnVal;\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps(oldTraps => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}