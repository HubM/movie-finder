{"version":3,"sources":["settings/index.js","services/MovieFinder.js","components/helpers/MovieCard.js","helpers/_functions/db.js","components/loading/search.js","components/views/Search.js"],"names":["movieFinder","this","apiBaseUrl","imageBaseUrl","moviePath","size","process","profilePath","movie","page","Promise","resolve","reject","url","settings","fetch","then","response","json","data","status_code","status_message","results","actorId","urlDetails","movieId","props","btnAction","viewOnly","onClick","addToFavorite","className","onlyDelete","inFav","deleteMovieFromFavorites","navigator","onLine","src","movieImage","seeMovieDetails","id","alt","title","moment","release_date","format","indexedDbSupported","getDatabase","a","openDB","upgrade","db","oldVersion","newVersion","store","createObjectStore","keyPath","autoIncrement","createIndex","overview","poster_path","getAllFromIndex","dbMovies","find","add","catch","err","console","error","getKeyFromIndex","movieKey","delete","xmlns","width","height","viewBox","cx","cy","r","fill","attributeName","dur","repeatCount","calcMode","keySplines","keyTimes","values","Search","keyPress","event","keyCode","searchMovie","setState","loading","moviesNotFound","setTimeout","state","search","movies","length","moviesWithFavorisInfos","map","some","dbMovie","finally","addMovieInFavAndRegenerateList","movieUpdated","Object","assign","bindedMovieIndex","findIndex","mov","index","splice","deleteMoviefromFavAndRegenerateList","generateMoviesList","MovieCard","getImageMovie","key","history","push","searchResetState","heigth","seeOtherPage","type","window","scroll","top","left","behavior","prevState","currentPage","aria-label","placeholder","onChange","target","value","onKeyDown","React","Component","withRouter"],"mappings":"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","file":"static/js/6.d02e6a54.chunk.js","sourcesContent":["export default {\n  apiKey: \"dc090ca63005b139171720979eb0186c\"\n}","import settings from \"../settings\";\nexport default class movieFinder {\n  constructor()Â {\n    this.apiBaseUrl = \"https://api.themoviedb.org/3\";\n    this.imageBaseUrl = \"https://image.tmdb.org/t/p\"\n  } \n\n  getImageMovie(moviePath, size = 500) {\n    return moviePath ? `${this.imageBaseUrl}/w${size}${moviePath}` : `${process.env.PUBLIC_URL}/placeholder.jpg`;\n  }\n\n  getActorProfile(profilePath, size = 200) {\n    return profilePath ? `${this.imageBaseUrl}/w${size}${profilePath}` : \"https://via.placeholder.com/200x300\";\n  }  \n\n  searchMovie(movie, page) {\n    return new Promise((resolve, reject) => {\n      const url = `${this.apiBaseUrl}/search/movie?api_key=${settings.apiKey}&language=fr-FR&query=${movie}&page=${page}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status_code === 7) {\n            reject(data.status_message);\n          } else {\n            resolve(data.results)\n          }\n        })\n    })\n  }\n\n  getActorDetails(actorId) {\n    return new Promise((resolve, reject) => {\n      const urlDetails = `${this.apiBaseUrl}/person/${actorId}?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(urlDetails)\n      .then(response => response.json())\n      .then(data => {\n        if (!data) {\n          return reject()\n        }\n\n        return resolve(data);\n      })\n    })\n  }\n\n  getActorMovies(actorId) {\n    return new Promise((resolve, reject) => {\n      const urlDetails = `${this.apiBaseUrl}/person/${actorId}/movie_credits?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(urlDetails)\n      .then(response => response.json())\n      .then(data => {\n        if (!data) {\n          return reject()\n        }\n\n        return resolve(data);\n      })\n    })\n  }\n\n  \n\n  getMovieDetail(movieId) {\n    return new Promise((resolve, reject) => {\n      const url = `${this.apiBaseUrl}/movie/${movieId}?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status_code === 7) {\n            reject(data.status_message);\n          } else {\n            resolve(data)\n          }\n        })\n    })\n  }\n\n  getMovieCredits(movieId) {\n    return new Promise((resolve, reject) => {\n      const url = `${this.apiBaseUrl}/movie/${movieId}/credits?api_key=${settings.apiKey}&language=fr-FR`;\n      fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status_code === 7) {\n          reject(data.status_message);\n        } else {\n          resolve(data)\n        }\n      })\n    })\n  }\n}","import React from \"react\";\nimport moment from \"moment\";\n\nexport default (props) => {\n  let btnAction = null;\n  \n  if (!props.viewOnly) {\n    btnAction = <button onClick={() => props.addToFavorite(props.movie)} className=\"btn-action add-to-favorites\">Ajouter</button>;\n  \n    if (props.onlyDelete || props.movie.inFav) {\n      btnAction = <button onClick={() => props.deleteMovieFromFavorites(props.movie)} className=\"btn-action remove-from-favorites\">Supprimer</button>\n    }\n  }\n  \n  return (\n    <li className=\"movie-card\">\n      {navigator.onLine && <img src={props.movieImage} onClick={() => props.seeMovieDetails(props.movie.id)} alt={`Affiche de ${props.movie.title}`} className=\"movie-card__img cursorPointer\" />}\n      <p className=\"movie-card__title\">{props.movie.title}</p>\n      <p className=\"movie-card__release\">{moment(props.movie.release_date).format(\"DD/MM/YYYY\")}</p>\n      <div className=\"movie-card__action\">\n        {props.indexedDbSupported && btnAction }\n        {navigator.onLine && <button onClick={() => props.seeMovieDetails(props.movie.id)} className=\"btn-action movie-details\">DÃ©tails</button> }\n      </div>\n    </li>\n  )\n}","import { openDB } from 'idb';\n\nconst getDatabase = async () => \n   await openDB(\"movies\", 1, {\n      upgrade(db, oldVersion, newVersion) {\n        const store = db.createObjectStore('favorites', {\n          keyPath: 'id',\n          autoIncrement: true,\n        });\n        // Create an index on the 'date' property of the objects.\n        store.createIndex('title', 'title');\n        store.createIndex('movieId', 'movieId');\n      }\n    });\n\nconst addToFavorite = async (movie) => \n  new Promise((resolve, reject) => {\n    const { id, title, overview, poster_path, release_date } = movie;\n  \n    getDatabase()\n    .then(async db => {\n      const dbMovies = await db.getAllFromIndex('favorites', 'title');\n      const existingMovie = dbMovies.find(movie => movie.movieId === id);\n    \n      if (!existingMovie) {\n        await db.add('favorites', {\n          movieId: id,\n          title,\n          overview,\n          poster_path,\n          release_date\n        });\n        resolve()\n      } else {\n        reject(\"Movie always in DB\");\n      }\n\n    })\n    .catch(err => {\n      console.error(err)\n      reject(err)\n    })\n  })\n  \nconst deleteMovieFromFavorites = async (movieId) => \n  new Promise((resolve, reject) => {\n    getDatabase()\n    .then(async db => {\n      const movieKey = await db.getKeyFromIndex(\"favorites\", \"movieId\", movieId);\n      await db.delete(\"favorites\", movieKey);\n      resolve();\n    })\n    .catch(err => {\n      reject(err);\n    })\n  })\n\n\nexport {\n  getDatabase,\n  addToFavorite,\n  deleteMovieFromFavorites  \n}","import React from \"react\";\n\nexport default (props) => \n  (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"loading\" width={props.width} height={props.height} viewBox=\"0 0 100 100\">\n      <circle cx=\"50\" cy=\"23\" r=\"13\" fill=\"#ffffff\">\n        <animate attributeName=\"cy\" dur=\"2s\" repeatCount=\"indefinite\" calcMode=\"spline\" keySplines=\"0.45 0 0.9 0.55;0 0.45 0.55 0.9\" keyTimes=\"0;0.5;1\" values=\"23;77;23\"></animate>\n      </circle>\n    </svg>\n  )\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Loading from \"../../components/loading/search\";\nimport MovieCard from \"../helpers/MovieCard\"\n\nimport { getDatabase, addToFavorite, deleteMovieFromFavorites } from \"../../helpers/_functions/db\"\n\nimport movieFinder from \"../../services/MovieFinder\";\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      db: null,\n      search: \"\",\n      movies: [],\n      moviesNotFound: false,\n      indexedDbSupported: ('indexedDB' in window),\n      loading: false,\n      currentPage: 1\n    }\n    this.movieFinder = new movieFinder();\n  }\n\n  componentDidMount() {\n    getDatabase()\n      .then(db => {\n        this.setState({ db })\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  keyPress = (event) => event.keyCode === 13 ? this.searchMovie() : false;\n\n  searchMovie = (page = 1) => {\n    this.setState({\n      loading: true,\n      moviesNotFound: false\n    })\n    setTimeout(() => {\n      this.movieFinder.searchMovie(this.state.search, page)\n        .then(async movies => {\n          if (!movies.length) {\n            this.setState({\n              moviesNotFound: true\n            })\n            return;\n          }\n          const dbMovies = await this.state.db.getAllFromIndex('favorites', 'title');\n          const moviesWithFavorisInfos = movies.map(movie => {\n            return {\n              ...movie,\n              inFav: dbMovies.some(dbMovie => dbMovie.movieId === movie.id)\n            }\n          })\n          this.setState({\n            movies: moviesWithFavorisInfos,\n          })\n        })\n        .catch(error => {\n          console.error(error)\n        })\n        .finally(() => (\n          this.setState({\n            loading: false\n          })\n        ))\n    }, 1000)\n  }\n\n  addMovieInFavAndRegenerateList = (movie) => {\n    addToFavorite(movie)\n    .then(() => {\n      const movieUpdated = Object.assign(movie, {\n        inFav: true\n      })\n      const bindedMovieIndex = this.state.movies.findIndex((mov, index) => mov.id === movie.id);\n      this.state.movies.splice(bindedMovieIndex, 1, movieUpdated);\n      this.setState({\n        movies: this.state.movies\n      })\n    })\n    .catch(err => {\n      console.error(err)\n    })\n  }\n\n  deleteMoviefromFavAndRegenerateList = (movie) => {\n    deleteMovieFromFavorites(movie.id)\n    .then(() => {\n      delete movie.inFav;\n      const bindedMovieIndex = this.state.movies.findIndex((mov, index) => mov.id === movie.id);\n      this.state.movies.splice(bindedMovieIndex, 1, movie);\n      this.setState({\n        movies: this.state.movies\n      })\n    })\n    .catch(err => {\n      console.error(err)\n    })\n  }  \n  \n  generateMoviesList = (movies) => {\n    return movies.map(movie => (\n        <MovieCard \n          movieImage={this.movieFinder.getImageMovie(movie.poster_path, 200)} \n          movie={movie}\n          key={`${movie.id}-${movie.release_date}`}\n          indexedDbSupported={this.state.indexedDbSupported}\n          addToFavorite={this.addMovieInFavAndRegenerateList}\n          deleteMovieFromFavorites={this.deleteMoviefromFavAndRegenerateList}\n          seeMovieDetails={() => this.seeMovieDetails(movie.id)}\n        />\n      )\n    );\n  }\n\n  seeMovieDetails = id => this.props.history.push(`/movie/${id}`);\n\n  searchResetState = () => {\n    if (this.state.loading) {\n      return (\n        <Loading width=\"25px\" heigth=\"25px\" />\n      )\n    } \n      return (\n        <div \n          className={`reset-search ${this.state.search.length <= 2 ? \"disabledBtn\" : \"\"}`} \n          onClick={() => this.setState({ movies: [], search: \"\", moviesNotFound: false })}\n        >\n          <span>+</span>\n        </div>\n      );\n  }\n\n  seeOtherPage = (type) => {\n    window.scroll({\n      top: 0, \n      left: 0, \n      behavior: 'smooth'\n    });\n    if (type === 1) {\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage + 1\n      }), () => {\n        this.searchMovie(this.state.currentPage)\n      })\n    } else {\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage - 1\n      }), () => {\n        this.searchMovie(this.state.currentPage)\n      })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"search-page\">\n        <h1>Rechercher un film</h1>\n        <div className=\"search\">\n          <div>\n            <input \n              type=\"text\" \n              aria-label=\"Bouton de recherche d'un film\" \n              placeholder=\"Shutter island...\"\n              onChange={(event) => this.setState({ search: event.target.value })} \n              onKeyDown={this.keyPress}\n              value={this.state.search}\n              className={`search-input ${this.state.search.length > 2 ? \"usable\" : \"\"}`}\n            />\n            {this.searchResetState()}\n          </div>\n          <button onClick={this.searchMovie} className={`search-action ${this.state.search.length <= 2 ? \"disabledBtn\" : \"\"}`}>Rechercher</button>\n        </div>\n\n        {!this.state.indexedDbSupported && <p>Vous devriez utiliser un navigateur moderne pour pouvoir enregistrer vos films prÃ©fÃ©rÃ©s</p>}\n        { this.state.moviesNotFound \n          ?\n            <p>Aucun film ne correspond Ã  votre cherche :(</p> \n          :\n            <div className=\"movies-section\">\n              <div className=\"movies-list\">\n                <ul className=\"layout-list\">{this.generateMoviesList(this.state.movies)}</ul>\n              </div>\n              <div className=\"pagination\">\n                {this.state.currentPage > 1 && <p className=\"pagination__prev cursorPointer\" onClick={() => this.seeOtherPage(-1)}>PrÃ©cÃ©dent</p>}\n                {this.state.movies.length > 0 && <p className=\"cursorPointer\" onClick={() => this.seeOtherPage(1)}>Suivant</p>}\n              </div>\n            </div>\n        }\n      </section>\n    )\n  }\n}\n\nexport default withRouter(Search)"],"sourceRoot":""}