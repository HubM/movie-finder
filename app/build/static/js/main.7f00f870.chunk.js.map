{"version":3,"sources":["components/helpers/Logo.js","components/loading/logo.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","xmlns","width","height","viewBox","className","onClick","history","push","fill","d","LoadingLogo","Logo","React","Component","Layout","lazy","Home","Search","Favorites","Movie","Actor","App","LoadingFallback","fallback","path","children","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uHAAA,2BAGeA,iBAAW,SAACC,GACzB,OACE,yBAAKC,MAAM,6BAA6BC,MAAM,MAAMC,OAAO,KAAKC,QAAQ,aAAaC,UAAU,OAAOC,QAAS,kBAAMN,EAAMO,QAAQC,KAAK,OACtI,0BAAMC,KAAK,OAAOC,EAAE,+yJ,8NCIXC,E,uKAJX,OAAO,yBAAKN,UAAU,eAAc,kBAACO,EAAA,EAAD,CAAMV,MAAM,QAAQC,OAAO,e,GAFzCU,IAAMC,WCK1BC,EAASC,gBAAK,kBAAM,iCACpBC,EAAOD,gBAAK,kBAAM,gCAClBE,EAASF,gBAAK,kBAAM,6DACpBG,EAAYH,gBAAK,kBAAM,6DACvBI,EAAQJ,gBAAK,kBAAM,6DACnBK,EAAQL,gBAAK,kBAAM,sDAEV,SAASM,IACtB,IAAMC,EAAkB,kBAAC,EAAD,MACxB,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAUD,GAClB,yBAAKlB,UAAU,OACb,kBAACU,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,KAAK,WACV,kBAACP,EAAD,OAEF,kBAAC,IAAD,CAAOO,KAAK,cACV,kBAACN,EAAD,OAEF,kBAAC,IAAD,CAAOM,KAAK,aAAaC,SAAU,kBAACN,EAAD,QACnC,kBAAC,IAAD,CAAOK,KAAK,aAAaC,SAAU,kBAACL,EAAD,QACnC,kBAAC,IAAD,CAAOI,KAAK,KACV,kBAACR,EAAD,YCrBhB,IAAMU,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCrFjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjC,EAAD,OAEFkC,SAASC,eAAe,SDOnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,GAAwB9B,OAAOC,SAAS8B,MACpDC,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,GAAN,sBAEPhC,IAgEV,SAAiCO,EAAOC,GAEtC4B,MAAM7B,EAAO,CACX8B,QAAS,CAAE,iBAAkB,YAE5BzB,MAAK,SAAA0B,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,MAAK,SAAAC,GACjCA,EAAa+B,aAAahC,MAAK,WAC7BV,OAAOC,SAAS0C,eAKpBvC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAyB,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OC7B/BE,K","file":"static/js/main.7f00f870.chunk.js","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nexport default withRouter((props) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"153\" height=\"44\" viewBox=\"0 0 153 44\" className=\"logo\" onClick={() => props.history.push('/')}>\n      <path fill=\"#FFF\" d=\"M4.95238095,19 L6.6031746,8.06366048 L10.8952381,19 L12.8761905,19 L17.3968254,8.06366048 L19.047619,19 L24,19 L20.7492063,0 L15.8222222,0 L12.0126984,10.1299735 L8.17777778,0 L3.25079365,0 L0,19 L4.95238095,19 Z M36.4874251,20 C38.0131737,20 39.4215569,19.7445561 40.7125749,19.2336683 C42.0035928,18.7227806 43.1143713,18.0150754 44.0449102,17.1105528 C44.9754491,16.2060302 45.7005988,15.1465662 46.2203593,13.9321608 C46.7401198,12.7177554 47,11.4070352 47,10 C47,8.59296482 46.7401198,7.28224456 46.2203593,6.0678392 C45.7005988,4.85343384 44.9754491,3.79396985 44.0449102,2.88944724 C43.1143713,1.98492462 42.0035928,1.27721943 40.7125749,0.766331658 C39.4215569,0.255443886 38.0131737,0 36.4874251,0 C34.9449102,0 33.5323353,0.255443886 32.2497006,0.766331658 C30.9670659,1.27721943 29.8646707,1.98492462 28.942515,2.88944724 C28.0203593,3.79396985 27.2994012,4.85343384 26.7796407,6.0678392 C26.2598802,7.28224456 26,8.59296482 26,10 C26,11.4070352 26.2598802,12.7177554 26.7796407,13.9321608 C27.2994012,15.1465662 28.0203593,16.2060302 28.942515,17.1105528 C29.8646707,18.0150754 30.9670659,18.7227806 32.2497006,19.2336683 C33.5323353,19.7445561 34.9449102,20 36.4874251,20 Z M36.4870588,15 C35.745098,15 35.0419608,14.8633814 34.3776471,14.5901442 C33.7133333,14.3169071 33.1309804,13.9334936 32.6305882,13.4399038 C32.1301961,12.9463141 31.7333333,12.3645833 31.44,11.6947115 C31.1466667,11.0248397 31,10.2932692 31,9.5 C31,8.70673077 31.1466667,7.97516026 31.44,7.30528846 C31.7333333,6.63541667 32.1301961,6.0536859 32.6305882,5.56009615 C33.1309804,5.06650641 33.7133333,4.68309295 34.3776471,4.40985577 C35.0419608,4.13661859 35.745098,4 36.4870588,4 C37.2290196,4 37.9321569,4.13661859 38.5964706,4.40985577 C39.2607843,4.68309295 39.847451,5.06650641 40.3564706,5.56009615 C40.8654902,6.0536859 41.2666667,6.63541667 41.56,7.30528846 C41.8533333,7.97516026 42,8.70673077 42,9.5 C42,10.2932692 41.8533333,11.0248397 41.56,11.6947115 C41.2666667,12.3645833 40.8654902,12.9463141 40.3564706,13.4399038 C39.847451,13.9334936 39.2607843,14.3169071 38.5964706,14.5901442 C37.9321569,14.8633814 37.2290196,15 36.4870588,15 Z M59.9595449,19 L68,0 L62.6144121,0 L57.9873578,11.566313 L53.3855879,0 L48,0 L56.0151707,19 L59.9595449,19 Z M76,44 L76,0 L71,0 L71,44 L76,44 Z M91,19 L91,14.8169761 L85.025641,14.8169761 L85.025641,11.5411141 L90.6666667,11.5411141 L90.6666667,7.35809019 L85.025641,7.35809019 L85.025641,4.18302387 L91,4.18302387 L91,0 L80,0 L80,19 L91,19 Z M61.9907407,44 L61.9907407,36.5411141 L67.4652778,36.5411141 L67.4652778,32.3580902 L61.9907407,32.3580902 L61.9907407,29.1830239 L68,29.1830239 L68,25 L57,25 L57,44 L61.9907407,44 Z M84.9455511,44 L84.9455511,32.3832891 L94.0796813,44 L99,44 L99,25 L94.0796813,25 L94.0796813,36.6167109 L84.9455511,25 L80,25 L80,44 L84.9455511,44 Z M110.458396,44 C111.795764,44 113.043116,43.739611 114.200454,43.2188329 C115.357791,42.6980548 116.36939,42.0008842 117.23525,41.127321 C118.101109,40.2537577 118.778366,39.2416004 119.26702,38.0908488 C119.755673,36.9400973 120,35.7431477 120,34.5 C120,33.2400531 119.751387,32.0347038 119.25416,30.8839523 C118.756934,29.7332007 118.075391,28.7252431 117.209531,27.8600796 C116.343671,26.994916 115.332073,26.3019452 114.174735,25.7811671 C113.017398,25.260389 111.778618,25 110.458396,25 L110.458396,25 L103,25 L103,44 L110.458396,44 Z M109.211538,40 L108,40 L108,29 L109.211538,29 C110.108974,29 110.916667,29.1390205 111.634615,29.4170616 C112.352564,29.6951027 112.958333,30.0774092 113.451923,30.563981 C113.945513,31.0505529 114.326923,31.6327014 114.596154,32.3104265 C114.865385,32.9881517 115,33.7180095 115,34.5 C115,35.2993681 114.869872,36.0335703 114.609615,36.7026066 C114.349359,37.371643 113.972436,37.9494471 113.478846,38.436019 C112.985256,38.9225908 112.379487,39.3048973 111.661538,39.5829384 C110.94359,39.8609795 110.126923,40 109.211538,40 L109.211538,40 Z M134,44 L134,39.8169761 L128.025641,39.8169761 L128.025641,36.5411141 L133.666667,36.5411141 L133.666667,32.3580902 L128.025641,32.3580902 L128.025641,29.1830239 L134,29.1830239 L134,25 L123,25 L123,44 L134,44 Z M142.001595,44 L142.001595,36.6923077 L146.773525,44 L153,44 L146.952153,36.2135279 C148.330144,35.8943413 149.372142,35.2853669 150.07815,34.3866048 C150.784157,33.4878426 151.137161,32.316092 151.137161,30.8713528 C151.137161,30.0649867 151.005316,29.3090186 150.741627,28.6034483 C150.477937,27.897878 150.086656,27.2763042 149.567783,26.7387268 C149.04891,26.2011494 148.389686,25.7769673 147.590112,25.4661804 C146.790537,25.1553935 145.854864,25 144.783094,25 L144.783094,25 L137,25 L137,44 L142.001595,44 Z M142.942675,33 L142,33 L142,28 L142.942675,28 C143.927813,28 144.683652,28.2150538 145.210191,28.6451613 C145.73673,29.0752688 146,29.6935484 146,30.5 C146,31.3064516 145.73673,31.9247312 145.210191,32.3548387 C144.683652,32.7849462 143.927813,33 142.942675,33 L142.942675,33 Z\"/>\n    </svg>\n  )\n});","import React from \"react\";\n\nimport Logo from \"../helpers/Logo\";\n\nclass LoadingLogo extends React.Component {\n  render() {\n    return <div className=\"app-loading\"><Logo width=\"100px\" height=\"100px\" /></div>\n  }\n}\n\nexport default LoadingLogo;\n\n","import React,  { lazy, Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport LoadingLogo from \"./components/loading/logo\";\n\nconst Layout = lazy(() => import(\"./components/helpers/Layout\"));\nconst Home = lazy(() => import(\"./components/views/Home\"))\nconst Search = lazy(() => import(\"./components/views/Search\"))\nconst Favorites = lazy(() => import(\"./components/views/Favorites\"))\nconst Movie = lazy(() => import(\"./components/views/Movie\"))\nconst Actor = lazy(() => import(\"./components/views/Actor\"));\n\nexport default function App() {\n  const LoadingFallback = <LoadingLogo />\n  return (\n    <Router>\n      <Suspense fallback={LoadingFallback}>\n        <div className=\"App\">\n          <Layout>\n            <Switch>\n              <Route path=\"/search\">\n                <Search />\n              </Route>\n              <Route path=\"/favorites\">\n                <Favorites />\n              </Route>\n              <Route path=\"/movie/:id\" children={<Movie />} />\n              <Route path=\"/actor/:id\" children={<Actor />} />\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Layout>\n        </div>\n      </Suspense>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// CSS\nimport './styles/reset.css';\nimport './styles/index.css';\n\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}